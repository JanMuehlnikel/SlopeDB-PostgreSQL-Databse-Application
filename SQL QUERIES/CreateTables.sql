-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."EMPLOYEE"
(
    "Employee_id" character varying NOT NULL,
    "First_Name" character varying,
    "Last_Name" character varying,
    "Job_title" character varying,
    "Salary_group" character varying,
    "Instructor_level" character varying,
    "Street" character varying,
    "House_num" character varying,
    "City" character varying,
    "Country" character varying,
    "Post_code" bigint,
    "Birthdate" date,
    "Age" bigint,
    "Sex" character varying,
    "Phonenumber" character varying,
    PRIMARY KEY ("Employee_id")
);

CREATE TABLE IF NOT EXISTS public."SALARY"
(
    "Salary_group" character varying NOT NULL,
    "Salary" bigint,
    PRIMARY KEY ("Salary_group")
);

CREATE TABLE IF NOT EXISTS public."STUDENT"
(
    "Student_id" character varying NOT NULL,
    "First_Name" character varying,
    "Last_Name" character varying,
    "Birthdate" date,
    "Adult" boolean,
    "Course_type" character varying,
    "Experience_level" character varying,
    "Phonenumber" character varying,
    "Sex" character varying,
    "Street" character varying,
    "House_num" character varying,
    "City" character varying,
    "Country" character varying,
    "Post-code" bigint,
    "Accomodation" character varying,
    "Ski_id" character varying,
    "Helmet_id" character varying,
    "Pole_id" character varying,
    "Arrival_date" date,
    "Departure_date" date,
    PRIMARY KEY ("Student_id"),
    UNIQUE ("Ski_id"),
    UNIQUE ("Helmet_id"),
    UNIQUE ("Pole_id")
);

CREATE TABLE IF NOT EXISTS public."ACCOMODATION"
(
    "Accomodation_id" character varying NOT NULL,
    "Name" character varying,
    "Type" character varying,
    "Street" character varying,
    "House_num" character varying,
    "City" character varying,
    "Country" character varying,
    "Post_code" character varying,
    PRIMARY KEY ("Accomodation_id")
);

CREATE TABLE IF NOT EXISTS public."SKI"
(
    "Ski_id" character varying NOT NULL,
    "Modell" character varying,
    "Brand" character varying,
    "Length" character varying,
    PRIMARY KEY ("Ski_id"),
    UNIQUE ("Ski_id")
);

CREATE TABLE IF NOT EXISTS public."HELMETS"
(
    "Helemets_id" character varying NOT NULL,
    "Brand" character varying,
    "Size" character varying,
    PRIMARY KEY ("Helemets_id"),
    UNIQUE ("Helemets_id")
);

CREATE TABLE IF NOT EXISTS public."POLES"
(
    "Poles_id" character varying NOT NULL,
    "Brand" character varying,
    "Length" character varying,
    PRIMARY KEY ("Poles_id"),
    UNIQUE ("Poles_id")
);

CREATE TABLE IF NOT EXISTS public."COURSE"
(
    "Course_id" character varying NOT NULL,
    "Course_level" character varying,
    "Start_date" date,
    "End_date" date,
    "Area" character varying,
    PRIMARY KEY ("Course_id")
);

CREATE TABLE IF NOT EXISTS public."COURSE_STUDENT"
(
    "COURSE_Course_id" character varying,
    "STUDENT_Student_id" character varying
);

CREATE TABLE IF NOT EXISTS public."AREA"
(
    "Area_id" character varying NOT NULL,
    "Country" character varying,
    "City" character varying,
    "Name" character varying,
    "Difficulty_Level" character varying,
    "Openting_time" time without time zone,
    "Closing_time" time without time zone,
    "Magic_carpet" boolean,
    PRIMARY KEY ("Area_id")
);

CREATE TABLE IF NOT EXISTS public."SHUTTLE"
(
    "Shuttle_name" character varying,
    "Type" character varying,
    "Start_location" character varying,
    "End_location" character varying,
    "Capacity" bigint,
    "Area_id" character varying
);

ALTER TABLE IF EXISTS public."EMPLOYEE"
    ADD FOREIGN KEY ("Salary_group")
    REFERENCES public."SALARY" ("Salary_group") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."STUDENT"
    ADD FOREIGN KEY ("Accomodation")
    REFERENCES public."ACCOMODATION" ("Accomodation_id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."STUDENT"
    ADD FOREIGN KEY ("Ski_id")
    REFERENCES public."SKI" ("Ski_id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."STUDENT"
    ADD FOREIGN KEY ("Helmet_id")
    REFERENCES public."HELMETS" ("Helemets_id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."STUDENT"
    ADD FOREIGN KEY ("Pole_id")
    REFERENCES public."POLES" ("Poles_id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."COURSE"
    ADD FOREIGN KEY ("Area")
    REFERENCES public."AREA" ("Area_id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."COURSE_STUDENT"
    ADD FOREIGN KEY ("COURSE_Course_id")
    REFERENCES public."COURSE" ("Course_id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."COURSE_STUDENT"
    ADD FOREIGN KEY ("STUDENT_Student_id")
    REFERENCES public."STUDENT" ("Student_id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."SHUTTLE"
    ADD FOREIGN KEY ("Area_id")
    REFERENCES public."AREA" ("Area_id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;